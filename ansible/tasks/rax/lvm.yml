---
- name: install lvm pacages
  dnf:
    name=lvm2
    state=present
- name: get block devices
  shell: echo /dev/xvd[a-z]*
  register: starting_block_devices

- name: create cbs volumes
  delegate_to: localhost
  rax_cbs:
    creds_file="{{rax_creds_file}}"
    volume_type="{{volume.type}}"
    region=IAD
    wait=yes
    size="{{volume.size}}"
    name="mailspool_lv_{{item}}"
  with_sequence: "count={{volume.mirrors|int | default(5)}}"
  register: cbs_volumes

- name: attach cbs volumes
  delegate_to: localhost
  rax_cbs_attachments:
    creds_file="{{rax_creds_file}}"
    server=proteus.randomuser.org
    region=IAD
    volume="{{item['volume']['id']}}"
    state=present
  with_items: "{{ cbs_volumes.results }}"
  register: cbs_attach

- name: get block devices
  shell: echo /dev/xvd[a-z]
  register: post_attach_block_devices

- debug: var=post_attach_block_devices
- name: partition block devices
  shell: "parted {{item}} mklabel gpt mkpart lvm 2048s 100% creates={{item}}1"
  
  with_items: "{{post_attach_block_devices.stdout.split()}}"

- name: get PVs
  shell: pvs --no-headings | awk '{print $1}'
  register: pv_list

- name: get available partitions
  shell: echo /dev/xvd[a-z]1
  register: partition_list

- name: pvcreate
  shell: pvcreate {{item}}
  with_items: "{{ partition_list.stdout.split() }}"
  when: "'{{ item }}' not in pv_list.stdout_lines and '{{ item }}' not in starting_block_devices.stdout.split()"

- name: create the PVs and vg in one go
  lvg:
    pvs="{{ set(partition-list.stdout.split()) - set(starting_block_devices.stdout.split() }}"
    vg={{volume.name}}
    vg_options=






