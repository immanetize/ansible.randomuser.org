---
- name: create hostfile entries for peer group
  lineinfile:
    regexp: "[0-9.]* {{ item }}"
    line: |
      {{ hostvars[item]['ansible_%s' % hostvars[item]['gluster_interface'] ]['ipv4']['address'] | default('oops') }} {{ item }}
    path: /etc/hosts
  with_items: "{{ ansible_play_batch }}"
- name: get some gluster packages
  yum:
    name: centos-release-gluster41
    state: present
- name: install server software
  yum: 
    name: "{{ item }}"
    state: present
  with_items:
    - glusterfs-server
    - heketi
    - heketi-client
- include_role: name=heketi
  when: containerized_heketi == false
- name: create a brick
  lvol:
    lv: "{{ pool.name }}"
    size: "{{ pool.size }}"
    vg: "{{ pool.vgs }}"
    opts: "--type raid5"
- name: create a filesystem on the brick
  filesystem:
    dev: "/dev/{{ pool.vgs }}/{{ pool.name }}"
    fstype: "{{ pool.fstype }}"
    opts: "-i size=512 -L {{ pool.name }}"
- name: mount the brick
  mount:
    fstype: "{{ pool.fstype }}"
    src: "/dev/{{ pool.vgs }}/{{ pool.name }}"
    path: "/var/bricks/{{ pool.name }}"
    state: mounted
- name: create a brick dir
  file:
    path: "/var/bricks/{{ pool.name }}/brick"
    state: directory
- name: create a volume 
  run_once: true
  gluster_volume:
    name: "{{ pool.name }}"
    bricks: "/var/bricks/{{ pool.name }}/brick"
    cluster: "{{ ansible_play_batch }}"
    host: "{{ ansible_nodename }}"
    state: present
- name: start the volume
  run_once: true
  gluster_volume:
    name: "{{ pool.name }}"
    state: started

