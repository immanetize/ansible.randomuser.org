- include_role: 
    name: controller_impersonator
- include_role: 
    name: glusterfs_server
  when: 
- set_fact:
    other_members: "{{ ansible_play_batch | difference([ansible_nodename]) }}"
- name: mount the volume
  mount:
    fstype: glusterfs
    src: "{{ ansible_nodename }}:{{ pool.name }}"
    path: /var/lib/libvirt/images
    opts: "backup-volfile-servers={{ ':'.join(other_members) }}"
    state: mounted

    #- fail:
    #  failed_when: True
- name: install virt packages
  package:
    name: "{{item}}"
    state: latest
  with_items:
    - "@^virtualization-host-environment"
    - libvirt-python
    - python-lxml
    - libguestfs-tools
- name: gimme perms
  template: 
    src: virt_perms.rules.j2
    dest: /etc/polkit-1/rules.d/00-libvirt_access.rules
  with_items:
    - virt-admins@randomuser.org
    - foreman-admins@randomuser.org
    - valentine
- name: start libvirtd
  service:
    name: libvirtd
    state: started
    enabled: True
- name: create a network
  virt_net:
    name: "{{ item.name }}"
    command: define
    xml: "{{ lookup('template', 'virt_net.xml.j2') }}"
  with_items: "{{ interfaces }}"
  when: item.type == 'virt'
- name: start the network
  virt_net:
    name: "{{ item.name }}"
    state: active
  with_items: "{{ interfaces }}"
  when: item.type == 'virt'
  #- name: autostart the network
  #  virt_net:
  #    name: "{{ item.name }}"
  #    autostart: yes
  #  with_items: "{{ interfaces }}"
- name: do a stupid reminder
  debug: 
    msg:  |
      This should be a module that sets up the valentine account
      on silo with ssh keys to log into th remote hosts
- name: seed image
  run_once: true
  delegate_to: silo.randomuser.org
  synchronize:
    src: /srv/iso/rhel/7/images/rhel7-latest.qcow2
    dest: /var/lib/libvirt/images/
    copy_links: yes
- name: get vm list
  virt:
    command: list_vms
  register: vm_list
- include: foreman_proxy_shim.yml

