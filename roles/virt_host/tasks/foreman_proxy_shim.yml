- set_fact:
    provision_hostname: "{{ ansible_hostname }}-proxy.randomuser.org"
  tags: shim
- name: get vm info
  become: true
  virt:
    command: list_vms
  register: vm_list
- debug: var=vm_list
- set_fact:
    seed_image: "/var/lib/libvirt/images/{{ provision_hostname }}.qcow2"
- include: provision_image.yml
  when: provision_hostname not in vm_list.list_vms
- name: define the vm
  virt:
    name: "{{ provision_hostname }}"
    command: define
    xml: "{{ lookup('template', 'basic_virt.xml.j2') }}"
#- name: start the vm
# virt:
#   name: "{{ provision_hostname }}"
#    state: running
#   autostart: yes
- name: get vm info
  shell: 
    virsh domiflist {{ provision_hostname }} | grep network
  register: proxy_info
- debug: var=proxy_info
- set_fact:
    proxy_mac:
      placeholder: True
- set_fact:
    proxy_mac: "{{ proxy_mac | combine({ item.split()[-3]: item.split()[-1] }) }}"
  with_items: "{{ proxy_info.stdout_lines }}"
- name: get a lease
  shell: |
    virsh net-update '{{ item.name }}' \
    add-first ip-dhcp-host \
    "<host mac='{{ proxy_mac[item.name] }}' \
     name='{{ provision_hostname }}' \
     ip='{{ item.address + '15'}}' />" --live --config
  with_items: "{{ interfaces }}"
  when: item.type == 'virt'
  failed_when: false
- debug: msg="virsh net-update is not idempotent, this needs a module"
- virt:
    name: "{{ provision_hostname }}"
    state: running
- include: inventory_shim.yml
  tags: shim


