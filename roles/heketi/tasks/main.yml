- include: tasks/store_key.yml file=heketi category=credentials key=admin_pass
- include: tasks/store_key.yml file=heketi category=credentials key=user_pass
- name: create directory for heketi ssh keys
  file:
    path: "{{ heketi_keydir }}"
    state: directory
    mode: 0750
    owner: root
    group: heketi
- name: create heketi keypair
  shell: |
    ssh-keygen -N '' -b 521 \
      -t ecdsa \
      -f {{ heketi_keypath }}
  args:
    creates: "{{  heketi_keypath }}"
- name: change ownership
  file:
    path: "{{ item }}"
    mode: 0640
    owner: root
    group: heketi
  with_items:
    - "{{ heketi_keypath }}"
    - "{{ heketi_keypath }}.pub"
- name: capture heketi pubkey
  shell: "cat {{ heketi_keypath}}.pub"
  changed_when: false
  register: heketi_pubkey
- name: deploy heketi config
  template:
    src: heketi.json.j2
    dest: /etc/heketi/heketi.json
- name: create heketi worker
  delegate_to: "{{ item }}"
  with_items: "{{ gluster_hosts }}"
  user:
    name: "{{ heketi_executor }}"
    system: yes
- name: give heketi worker sudo privs
  delegate_to: "{{ item }}"
  with_items: "{{ gluster_hosts }}"
  lineinfile:
    line: "{{ heketi_executor }} ALL=(ALL) NOPASSWD: ALL"
    path: /etc/sudoers.d/heketi.conf
    validate: '/usr/sbin/visudo -c -f %s'
    create: yes
    #- name: set up pubkey
    #  delegate_to: "{{ gluster_hosts }}"
    #  authrorized_key:
    #    user: "{{ heketi_executor }}"
    #    key: "{{ heketi_pubkey.stdout }}"
- name: enable shell convenience
  copy:
    content: |
      export HEKETI_CLI_SERVER="http://{{ansible_nodename}}:{{heketi_port}}"
      export HEKETI_CLI_USER="admin"
      export HEKETI_CLI_KEY="{{ansible_local.heketi.credentials.admin_pass}}"
    dest: "{{ ansible_user_dir }}/.heketi_admin"
- lineinfile:
    line: "source {{ ansible_user_dir }}/.heketi_admin"
    path: "{{ ansible_user_dir }}.bash_profile"
    create: yes
- name: ship a functional service unit
  copy:
    src: heketi.service
    dest: /etc/systemd/system/heketi.service
  register: unitfile
- shell: systemctl daemon-reload
  when: unitfile|changed
- service: name=heketi state=started
- set_fact:
    topo_name: "gluster_pool_{{ gluster_hosts | to_uuid }}.json"
- name: build heketi topology
  template:
    src: topology.json.j2
    dest: "/var/lib/heketi/{{ topo_name }}"


